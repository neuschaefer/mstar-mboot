//<MStar Software>//******************************************************************************// MStar Software// Copyright (c) 2010 - 2012 MStar Semiconductor, Inc. All rights reserved.// All software, firmware and related documentation herein ("MStar Software") are// intellectual property of MStar Semiconductor, Inc. ("MStar") and protected by// law, including, but not limited to, copyright law and international treaties.// Any use, modification, reproduction, retransmission, or republication of all // or part of MStar Software is expressly prohibited, unless prior written // permission has been granted by MStar. //// By accessing, browsing and/or using MStar Software, you acknowledge that you// have read, understood, and agree, to be bound by below terms ("Terms") and to// comply with all applicable laws and regulations://// 1. MStar shall retain any and all right, ownership and interest to MStar//    Software and any modification/derivatives thereof.//    No right, ownership, or interest to MStar Software and any//    modification/derivatives thereof is transferred to you under Terms.//// 2. You understand that MStar Software might include, incorporate or be//    supplied together with third party`s software and the use of MStar//    Software may require additional licenses from third parties.  //    Therefore, you hereby agree it is your sole responsibility to separately//    obtain any and all third party right and license necessary for your use of//    such third party`s software. //// 3. MStar Software and any modification/derivatives thereof shall be deemed as//    MStar`s confidential information and you agree to keep MStar`s //    confidential information in strictest confidence and not disclose to any//    third party.  //// 4. MStar Software is provided on an "AS IS" basis without warranties of any//    kind. Any warranties are hereby expressly disclaimed by MStar, including//    without limitation, any warranties of merchantability, non-infringement of//    intellectual property rights, fitness for a particular purpose, error free//    and in conformity with any international standard.  You agree to waive any//    claim against MStar for any loss, damage, cost or expense that you may//    incur related to your use of MStar Software.//    In no event shall MStar be liable for any direct, indirect, incidental or//    consequential damages, including without limitation, lost of profit or//    revenues, lost or damage of data, and unauthorized system use.//    You agree that this Section 4 shall still apply without being affected//    even if MStar Software has been modified by MStar in accordance with your//    request or instruction for your use, except otherwise agreed by both//    parties in writing.//// 5. If requested, MStar may from time to time provide technical supports or//    services in relation with MStar Software to you for your use of//    MStar Software in conjunction with your or your customer`s product//    ("Services").//    You understand and agree that, except otherwise agreed by both parties in//    writing, Services are provided on an "AS IS" basis and the warranty//    disclaimer set forth in Section 4 above shall apply.  //// 6. Nothing contained herein shall be construed as by implication, estoppels//    or otherwise://    (a) conferring any license or right to use MStar name, trademark, service//        mark, symbol or any other identification;//    (b) obligating MStar or any of its affiliates to furnish any person,//        including without limitation, you and your customers, any assistance//        of any kind whatsoever, or any information; or //    (c) conferring any license or right under any intellectual property right.//// 7. These terms shall be governed by and construed in accordance with the laws//    of Taiwan, R.O.C., excluding its conflict of law rules.//    Any and all dispute arising out hereof or related hereto shall be finally//    settled by arbitration referred to the Chinese Arbitration Association,//    Taipei in accordance with the ROC Arbitration Law and the Arbitration//    Rules of the Association by three (3) arbitrators appointed in accordance//    with the said Rules.//    The place of arbitration shall be in Taipei, Taiwan and the language shall//    be English.  //    The arbitration award shall be final and binding to both parties.////******************************************************************************//<MStar Software>#ifndef IR_FORMAT_H#define IR_FORMAT_H//-------------------------------------------------------------------------------------------// Customer IR Specification parameter define (Please modify them by IR SPEC)//-------------------------------------------------------------------------------------------#define IR_MODE_SEL             IR_TYPE_SWDECODE_TOSHIBA_MODE//Hisense 6I78 need support 2header code: one for user one for factory// IR Header code define#define IR_HEADER_CODE0         	0x04//0x80    // Custom 0#define IR_HEADER_CODE1         	0xFB//0x7F    // Custom 1// IR Timing define#define IR_HEADER_CODE_TIME     12000   // us#define IR_OFF_CODE_TIME        4500    // us#define IR_OFF_CODE_RP_TIME     2200    // us#define IR_LOGI_01H_TIME        560     // us#define IR_LOGI_0_TIME          1050    // us#define IR_LOGI_1_TIME          2050    // us#define IR_TIMEOUT_CYC          180000  // us#define IR_HEADER_CODE_TIME_UB  20#define IR_HEADER_CODE_TIME_LB  -20#define IR_OFF_CODE_TIME_UB  20#define IR_OFF_CODE_TIME_LB  -20#define IR_OFF_CODE_RP_TIME_UB  20#define IR_OFF_CODE_RP_TIME_LB  -20#define IR_LOGI_01H_TIME_UB  35#define IR_LOGI_01H_TIME_LB  -30#define IR_LOGI_0_TIME_UB  20#define IR_LOGI_0_TIME_LB  -20#define IR_LOGI_1_TIME_UB  20#define IR_LOGI_1_TIME_LB  -20#define IR_TOSHIBA_HEADER_CNT_UB 	13000#define IR_TOSHIBA_HEADER_CNT_LB	11000#define IR_TOSHIBA_OFF_CNT_UB    	4800#define IR_TOSHIBA_OFF_CNT_LB    	4400#define IR_TOSHIBA_LOGIC0_CNT_UB	1200#define IR_TOSHIBA_LOGIC0_CNT_LB	900#define IR_TOSHIBA_LOGIC1_CNT_UB	2200#define IR_TOSHIBA_LOGIC1_CNT_LB	1900// IR Format define#define IRKEY_DUMY              0xFF#define IRDA_KEY_MAPPING_POWER  IRKEY_POWER#define IR_LEADER_CODE_CHECKING_OPTION 0xBFtypedef enum _IrCommandType{    IRKEY_TV                = 0x90,    IRKEY_CHANNEL_LIST      = 0x10,    IRKEY_CHANNEL_FAV_LIST  = 0x1E,    IRKEY_CHANNEL_RETURN    = 0x0B,    IRKEY_CHANNEL_PLUS      = 0x95,    IRKEY_CHANNEL_MINUS     = 0x4B,    IRKEY_AUDIO             = 0x11,    IRKEY_VOLUME_PLUS       = 0x44,    IRKEY_VOLUME_MINUS      = 0x43,    IRKEY_UP                = 0x16,    IRKEY_POWER             = 0x08, //0x0D    IRKEY_EXIT              = 0x48,    IRKEY_MENU              = 0x14,    IRKEY_DOWN              = 0x13,    IRKEY_LEFT              = 0x19,    IRKEY_SELECT            = 0x15,    IRKEY_RIGHT             = 0x18,    IRKEY_NUM_0             = 0x00,    IRKEY_NUM_1             = 0x01,    IRKEY_NUM_2             = 0x02,    IRKEY_NUM_3             = 0x03,    IRKEY_NUM_4             = 0x04,    IRKEY_NUM_5             = 0x05,    IRKEY_NUM_6             = 0x06,    IRKEY_NUM_7             = 0x07,    IRKEY_NUM_8             = 0x08,    IRKEY_NUM_9             = 0x09,    IRKEY_MUTE              = 0x0E,    IRKEY_PAGE_UP           = 0x03,    IRKEY_PAGE_DOWN         = 0x05,    IRKEY_CLOCK             = 0x5F,    IRKEY_INFO              = 0x0C,    IRKEY_RED               = 0x52,    IRKEY_GREEN             = 0x53,    IRKEY_YELLOW            = 0x54,    IRKEY_BLUE              = 0x55,    IRKEY_MTS               = 0x41,    IRKEY_NINE_LATTICE      = IRKEY_DUMY,    IRKEY_TTX               = 0x0A,    IRKEY_CC                = 0x09,    IRKEY_INPUT_SOURCE      = 0x12,    IRKEY_CRADRD            = IRKEY_DUMY-1,//    IRKEY_PICTURE           = 0x40,    IRKEY_ZOOM              = 0x13,    IRKEY_DASH              = 0x4E,    IRKEY_SLEEP             = 0x1A,    IRKEY_EPG               = 0x1D,    IRKEY_PIP               = 0x40,    IRKEY_HOME			    = 0x4A,  //home Key  	IRKEY_MIX               = 0x1C,    IRKEY_INDEX             = 0x18,    IRKEY_HOLD              = 0x00,    IRKEY_PREVIOUS          = 0x58,    IRKEY_NEXT              = 0x59,    IRKEY_BACKWARD          = 0x57,    IRKEY_FORWARD           = 0x56,    IRKEY_PLAY              = 0x01,    IRKEY_RECORD            = 0x5E,    IRKEY_STOP              = 0x5A,    IRKEY_PAUSE             = 0x4E,    IRKEY_SIZE              = 0x43,    IRKEY_REVEAL            = 0x4F,    IRKEY_SUBCODE           = 0x1F,		IRKEY_TV_INPUT           = IRKEY_DUMY-2,	IRKEY_ADJUST               = IRKEY_DUMY-3,	IRKEY_KEY_DISABLE_KEYPAD = IRKEY_DUMY-4,	IRKEY_P_CHECK      = IRKEY_DUMY-5,	IRKEY_S_CHECK   =   IRKEY_DUMY-6,	//for HIS keypad	IRKEY_KEYPAD_POWER       = 0x92,	IRKEY_KEYPAD_CHANNEL_PLUS= 0x8B,	IRKEY_KEYPAD_VOLUME_PLUS = 0x73,	IRKEY_KEYPAD_MENU        = 0x41,	IRKEY_KEYPAD_CHANNEL_MINUS = 0x1E,	IRKEY_KEYPAD_VOLUME_MINUS = 0x2E,	IRKEY_KEYPAD_INPUT_SOURCE = 0x20,}IrCommandType;//-------------------------------------------------------------------------------------------//-------------------------------------------------------------------------------------------// IR system parameter define for H/W setting (Please don't modify them)//-------------------------------------------------------------------------------------------#define IR_CKDIV_NUM                        ((XTAL_CLOCK_FREQ+500000)/1000000)#define IR_CKDIV_NUM_BOOT                   XTAL_CLOCK_FREQ#define IR_CLK_BOOT                         (XTAL_CLOCK_FREQ/1000000)#define IR_CLK                              IR_CLK_BOOT#define irGetMinCnt_BOOT(time, tolerance)   ((u32)(((double)time*((double)IR_CLK_BOOT)/(IR_CKDIV_NUM_BOOT+1))*((double)1-tolerance)))#define irGetMaxCnt_BOOT(time, tolerance)   ((u32)(((double)time*((double)IR_CLK_BOOT)/(IR_CKDIV_NUM_BOOT+1))*((double)1+tolerance)))#define irGetMinCnt(time, tolerance)        ((u32)(((double)time*((double)IR_CLK)/(IR_CKDIV_NUM+1))*((double)1-tolerance)))#define irGetMaxCnt(time, tolerance)        ((u32)(((double)time*((double)IR_CLK)/(IR_CKDIV_NUM+1))*((double)1+tolerance)))#define irGetCnt_BOOT(time)                 ((u32)((double)time*((double)IR_CLK_BOOT)/(IR_CKDIV_NUM_BOOT+1)))#define irGetCnt(time)                      ((u32)((double)time*((double)IR_CLK)/(IR_CKDIV_NUM+1)))// 12Mhz#define IR_RP_TIMEOUT_BOOT      irGetCnt_BOOT(IR_TIMEOUT_CYC)#define IR_HDC_UPB_BOOT         irGetMaxCnt_BOOT(IR_HEADER_CODE_TIME, 0.2)#define IR_HDC_LOB_BOOT         irGetMinCnt_BOOT(IR_HEADER_CODE_TIME, 0.2)#define IR_OFC_UPB_BOOT         irGetMaxCnt_BOOT(IR_OFF_CODE_TIME, 0.2)#define IR_OFC_LOB_BOOT         irGetMinCnt_BOOT(IR_OFF_CODE_TIME, 0.2)#define IR_OFC_RP_UPB_BOOT      irGetMaxCnt_BOOT(IR_OFF_CODE_RP_TIME, 0.2)#define IR_OFC_RP_LOB_BOOT      irGetMinCnt_BOOT(IR_OFF_CODE_RP_TIME, 0.2)#define IR_LG01H_UPB_BOOT       irGetMaxCnt_BOOT(IR_LOGI_01H_TIME, 0.35)#define IR_LG01H_LOB_BOOT       irGetMinCnt_BOOT(IR_LOGI_01H_TIME, 0.3)#define IR_LG0_UPB_BOOT         irGetMaxCnt_BOOT(IR_LOGI_0_TIME, 0.2)#define IR_LG0_LOB_BOOT         irGetMinCnt_BOOT(IR_LOGI_0_TIME, 0.2)#define IR_LG1_UPB_BOOT         irGetMaxCnt_BOOT(IR_LOGI_1_TIME, 0.2)#define IR_LG1_LOB_BOOT         irGetMinCnt_BOOT(IR_LOGI_1_TIME, 0.2)// 90Mhz#define IR_RP_TIMEOUT           irGetCnt(IR_TIMEOUT_CYC)#define IR_HDC_UPB              irGetMaxCnt(IR_HEADER_CODE_TIME, 0.2)#define IR_HDC_LOB              irGetMinCnt(IR_HEADER_CODE_TIME, 0.2)#define IR_OFC_UPB              irGetMaxCnt(IR_OFF_CODE_TIME, 0.2)#define IR_OFC_LOB              irGetMinCnt(IR_OFF_CODE_TIME, 0.2)#define IR_OFC_RP_UPB           irGetMaxCnt(IR_OFF_CODE_RP_TIME, 0.2)#define IR_OFC_RP_LOB           irGetMinCnt(IR_OFF_CODE_RP_TIME, 0.2)#define IR_LG01H_UPB            irGetMaxCnt(IR_LOGI_01H_TIME, 0.35)#define IR_LG01H_LOB            irGetMinCnt(IR_LOGI_01H_TIME, 0.3)#define IR_LG0_UPB              irGetMaxCnt(IR_LOGI_0_TIME, 0.2)#define IR_LG0_LOB              irGetMinCnt(IR_LOGI_0_TIME, 0.2)#define IR_LG1_UPB              irGetMaxCnt(IR_LOGI_1_TIME, 0.2)#define IR_LG1_LOB              irGetMinCnt(IR_LOGI_1_TIME, 0.2)//-------------------------------------------------------------------------------------------#endif